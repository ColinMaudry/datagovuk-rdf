PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX void: <http://rdfs.org/ns/void#>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dcat: <http://www.w3.org/ns/dcat#>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dgfr: <http://colin.maudry.com/ontologies/dgfr#>
PREFIX xs: <http://www.w3.org/2001/XMLSchema#>
PREFIX apf: <http://jena.hpl.hp.com/ARQ/property#>

construct

{

  ?resource a dcat:Distribution ;
  	dgfr:dataset ?dataset ;
    dct:identifier ?Resource_ID ;
    dcat:downloadUrl ?urlAsUri ;
    rdfs:label ?Description ;
    dct:description ?Description ;
    dgfr:format ?lcFormat ; 
		dct:publisher ?Organization .
      
  ?dataset dcat:distribution ?resource .
}
from <file:../csv/resources.csv#delimiter=%2C;encoding=utf-8>
  where {
  
  bind(uri(concat("https://www.data.maudry.com/uk/resources/",?Resource_ID)) as ?resource)
  bind(uri(concat("https://www.data.maudry.com/uk/datasets/",?Dataset_Name)) as ?dataset)
  #If the URL contains space(s) 1) We remove the trailing space(s) (if any) 2) We replace the remaining spaces with %20 (the encoded equivalent of space)
  bind(if(contains(?url," "), uri(replace(replace(?url,"[ ]+$","")," ","%20")),uri(?url)) as ?urlAsUri)
 # bind(xs:dateTime(?Date) as ?createdAsDateTime)
  bind(lcase(?Format) as ?lcFormat)
  }
  
  